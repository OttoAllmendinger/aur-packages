# Maintainer: Otto Allmendinger <otto.allmendinger@gmail.com>
# https://github.com/OttoAllmendinger/aur-packages

pkgname="zeroc-ice"
true && pkgname=("zeroc-ice"
    "zeroc-ice-php"
    "zeroc-ice-python2"
    "zeroc-ice-python"
    "zeroc-ice-java")
pkgver=3.5.0
pkgrel=4
pkgdesc="An object-oriented middleware that provides object-oriented Remote \
Procedure Call functionality"
arch=("i686" "x86_64")
url="http://www.zeroc.com"
license=("GPL" "custom: ICE license")
makedepends=("apache-ant" "mcpp"
    "openssl" "expat" "db" \
    "php" \
    "python" "python2" \
    "java-environment" "java-berkeleydb>=5.3")
depends_zeroc_ice=("db" "openssl" "expat")
depends_zeroc_ice_python2=("zeroc-ice" "python2")
depends_zeroc_ice_python=("zeroc-ice" "python")
depends_zeroc_ice_php=("zeroc-ice" "php")
depends_zeroc_ice_java=("zeroc-ice" "java-environment" "java-berkeleydb>=5.3")

source=(
    "http://www.zeroc.com/download/Ice/${pkgver/%.0/}/Ice-$pkgver.tar.gz"
    "ice.pth"
    "ice.ini"
    "build.xml.nogui.patch"
    "IcePHP-Init-gcc-narrowing.patch")

_makedir=Ice-${pkgver}
_builddir=Ice-${pkgver}-build
_jardir=${_builddir}/jar

if [ $CARCH = "i686" ]; then
    _libdir=${_builddir}/lib
else
    _libdir=${_builddir}/lib64
fi


_build_common() {
    cd ${srcdir}/${_makedir}/cpp/src

    msg2 "to only build selected parts, use "
    msg2 "     makepkg --pkg=foo"
    msg  "to build this package"

    make OPTIMIZE=yes embedded_runpath_prefix=""
}

_build_cpp() {
    cd ${srcdir}/${_makedir}/cpp

    msg2 "building c++ bindings"
    make prefix=${srcdir}/${_builddir} embedded_runpath_prefix="" install
}

_package_cpp() {
    cd ${srcdir}

    install -dm755 ${pkgdir}/usr/bin
    cp -r ${_builddir}/bin/* ${pkgdir}/usr/bin/

    install -dm755 ${pkgdir}/usr/lib
    cp ${_libdir}/* ${pkgdir}/usr/lib/

    install -dm755 ${pkgdir}/usr/include
    cp -r ${_builddir}/include/* ${pkgdir}/usr/include/
}

_build_python2() {
    cd ${srcdir}

    msg2 "building Python2 bindings..."

    cp -r ${_makedir}/py ${_makedir}/py2
    cd ${_makedir}/py2
    make PYTHON_VERSION=python2.7 OPTIMIZE=yes prefix=${srcdir}/${_builddir} \
        embedded_runpath_prefix="" CXXFLAGS="-Wno-format -fPIC" install
}

_package_python2() {
    cd ${srcdir}

    install -dm755 ${pkgdir}/usr/lib/python2.7/site-packages/
    cp -r ${_builddir}/python ${pkgdir}/usr/lib/python2.7/site-packages/Ice
    cp -p ${srcdir}/ice.pth ${pkgdir}/usr/lib/python2.7/site-packages/
}

_build_python() {
    cd ${srcdir}

    msg2 "building Python3 bindings..."

    cp -r ${_makedir}/py ${_makedir}/py3
    cd ${_makedir}/py3
    make PYTHON_VERSION=python3.3 OPTIMIZE=yes prefix=${srcdir}/${_builddir} \
        embedded_runpath_prefix="" CXXFLAGS="-Wno-format -fPIC" install
}

_package_python() {
    cd ${srcdir}

    install -dm755 ${pkgdir}/usr/lib/python3.3/site-packages/
    cp -r ${_builddir}/python ${pkgdir}/usr/lib/python3.3/site-packages/Ice
    cp -p ${srcdir}/ice.pth ${pkgdir}/usr/lib/python3.3/site-packages/
}

_build_php() {
    cd ${srcdir}/${_makedir}/php

    msg2 "building PHP bindings..."
    patch -p0 < ${srcdir}/IcePHP-Init-gcc-narrowing.patch
    make OPTIMIZE=yes prefix=${srcdir}/${_builddir} \
        embedded_runpath_prefix="" install
}

_package_php() {
    cd ${srcdir}

    _datadir=${pkgdir}/usr/share/Ice-${pkgver}
    install -dm755 ${_datadir}
    install -Dm755 ${_builddir}/php/IcePHP.so ${pkgdir}/usr/lib/php/modules/IcePHP.so
    install -Dm644 ${srcdir}/ice.ini ${pkgdir}/etc/php/conf.d/ice.ini
    cp -r ${_builddir}/php ${_datadir}/php
}

_build_java() {
    cd ${srcdir}/${_makedir}/java


    msg2 "building Java bindings..."

    # we don't build the gui stuff since it depends on javafx and there isn't a
    # good package yet
    #_java_deps=(jgoodies-common jgoodies-looks jgoodies-forms berkeleydb)
    patch -p0 < ${srcdir}/build.xml.nogui.patch

    _java_deps=(berkeleydb)
    for jpkg in $_java_deps; do
        for jar in /usr/share/java/${jpkg}/*.jar; do
            CLASSPATH=${CLASSPATH}:${jar}
        done
    done

    export CLASSPATH

    ant -Dprefix=${srcdir}/${_jardir} install
}

_package_java() {
    cd ${srcdir}

    mkdir -p ${pkgdir}/usr/share/java/zeroc-ice/
    for jarfile in ${_jardir}/lib/*.jar ; do
        install -Dm644 ${jarfile} ${pkgdir}/usr/share/java/zeroc-ice/
    done
}

_package_slice() {
    cd ${srcdir}

    _datadir=${pkgdir}/usr/share/Ice-${pkgver}

    install -dm755 ${_datadir}

    ln -vsfn Ice-${pkgver} ${pkgdir}/usr/share/Ice

    msg2 "copying Slice files..."
    cp -r ${_builddir}/slice ${_datadir}/slice

    msg2 "copying ImportKey..."
    cp -r ${_builddir}/lib/ImportKey.class ${_datadir}
}



build() {
    cd ${srcdir}
    rm -rf ${_builddir}
    mkdir ${_builddir}
    mkdir ${_libdir}
    mkdir ${_jardir}
    mkdir ${_builddir}/bin

    _build_common
    _build_cpp
}

package_zeroc-ice() {
    cd ${srcdir}

    _package_cpp
    _package_slice


    install -Dm644 ${_makedir}/ICE_LICENSE \
                ${pkgdir}/usr/share/licenses/zeroc-ice/ICE_LICENSE
}

package_zeroc-ice-python2() {
    _build_python2
    _package_python2
}

package_zeroc-ice-python() {
    _build_python
    _package_python
}

package_zeroc-ice-java() {
    _build_java
    _package_java
}

package_zeroc-ice-php() {
    _build_php
    _package_php
}

md5sums=('19a9c137ef78aad2a21ad851de99ed27'
         '5e1e1befd5cbd5262ec47770f591bd14'
         'e8092ad772cb0e68c75353fd7c8b09e6'
         '3a64e4ff74a2302e9984bdfcb884d49b'
         'a05987005f3d589bb3190f7486ef2b65')
